<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace DwollaSwagger\models;

use \ArrayAccess;

class FundingSource implements ArrayAccess {
  static $swaggerTypes = array(
      '_links' => 'map[string,HalLink]',
      '_embedded' => 'object',
      'id' => 'string',
      'status' => 'string',
      'type' => 'string',
      'bank_account_type' => 'string',
      'name' => 'string',
      'created' => 'DateTime',
      'balance' => 'object',
      'removed' => 'boolean',
      'channels' => 'array[string]',
      'bank_name' => 'string',
      'iav_account_holders' => 'object',
      'fingerprint' => 'string'
  );

  static $attributeMap = array(
      '_links' => '_links',
      '_embedded' => '_embedded',
      'id' => 'id',
      'status' => 'status',
      'type' => 'type',
      'bank_account_type' => 'bankAccountType',
      'name' => 'name',
      'created' => 'created',
      'balance' => 'balance',
      'removed' => 'removed',
      'channels' => 'channels',
      'bank_name' => 'bankName',
      'iav_account_holders' => 'iavAccountHolders',
      'fingerprint' => 'fingerprint'
  );

  
  public $_links; /* map[string,HalLink] */
  public $_embedded; /* object */
  public $id; /* string */
  public $status; /* string */
  public $type; /* string */
  public $bank_account_type; /* string */
  public $name; /* string */
  public $created; /* DateTime */
  public $balance; /* object */
  public $removed; /* boolean */
  public $channels; /* array[string] */
  public $bank_name; /* string */
  public $iav_account_holders; /* object */
  public $fingerprint; /* string */

  public function __construct(array $data = null) {
    $this->_links = isset($data["_links"]) ? $data["_links"] : null;
    $this->_embedded = isset($data["_embedded"]) ? $data["_embedded"] : null;
    $this->id = isset($data["id"]) ? $data["id"] : null;
    $this->status = isset($data["status"]) ? $data["status"] : null;
    $this->type = isset($data["type"]) ? $data["type"] : null;
    $this->bank_account_type = isset($data["bank_account_type"]) ? $data["bank_account_type"] : null;
    $this->name = isset($data["name"]) ? $data["name"] : null;
    $this->created = isset($data["created"]) ? $data["created"] : null;
    $this->balance = isset($data["balance"]) ? $data["balance"] : null;
    $this->removed = isset($data["removed"]) ? $data["removed"] : null;
    $this->channels = isset($data["channels"]) ? $data["channels"] : null;
    $this->bank_name = isset($data["bank_name"]) ? $data["bank_name"] : null;
    $this->iav_account_holders = isset($data["iav_account_holders"]) ? $data["iav_account_holders"] : null;
    $this->fingerprint = isset($data["fingerprint"]) ? $data["fingerprint"] : null;
  }

  #[\ReturnTypeWillChange]
  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  #[\ReturnTypeWillChange]
  public function offsetGet($offset) {
    return $this->$offset;
  }

  #[\ReturnTypeWillChange]
  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  #[\ReturnTypeWillChange]
  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
